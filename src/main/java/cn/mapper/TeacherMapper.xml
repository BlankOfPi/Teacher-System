<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.mapper.TeacherMapper" >
  <resultMap id="BaseResultMap" type="cn.bean.Teacher" >
    <id column="t_id" property="tId" jdbcType="INTEGER" />
    <result column="t_name" property="tName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="authorlever" property="authorlever" jdbcType="INTEGER" />
    <result column="school_year" property="schoolYear" jdbcType="INTEGER" />
    <result column="education" property="education" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="native_place" property="nativePlace" jdbcType="VARCHAR" />
    <result column="certificate_number" property="certificateNumber" jdbcType="VARCHAR" />
    <result column="image" property="image" jdbcType="VARCHAR" />
    <result column="major" property="major" jdbcType="VARCHAR" />
    <result column="graduate_school" property="graduateSchool" jdbcType="VARCHAR" />
    <result column="teaching_research" property="teachingResearch" jdbcType="VARCHAR" />
    <result column="job" property="job" jdbcType="VARCHAR" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    t_id, t_name, password, authorlever, school_year, education, title, sex, native_place, 
    certificate_number, image, major, graduate_school, teaching_research, job, modify_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.bean.TeacherExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null and pageSize != null and pageSize != 0">
	    limit #{startRow},#{pageSize}
	</if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from teacher
    where t_id = #{tId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from teacher
    where t_id = #{tId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.bean.TeacherExample" >
    delete from teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.bean.Teacher" >
    insert into teacher (t_id, t_name, password, 
      authorlever, school_year, education, 
      title, sex, native_place, 
      certificate_number, image, major, 
      graduate_school, teaching_research, job, 
      modify_time)
    values (#{tId,jdbcType=INTEGER}, #{tName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{authorlever,jdbcType=INTEGER}, #{schoolYear,jdbcType=INTEGER}, #{education,jdbcType=VARCHAR}, 
      #{title,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, #{nativePlace,jdbcType=VARCHAR}, 
      #{certificateNumber,jdbcType=VARCHAR}, #{image,jdbcType=VARCHAR}, #{major,jdbcType=VARCHAR}, 
      #{graduateSchool,jdbcType=VARCHAR}, #{teachingResearch,jdbcType=VARCHAR}, #{job,jdbcType=VARCHAR}, 
      #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.bean.Teacher" >
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tId != null" >
        t_id,
      </if>
      <if test="tName != null" >
        t_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="authorlever != null" >
        authorlever,
      </if>
      <if test="schoolYear != null" >
        school_year,
      </if>
      <if test="education != null" >
        education,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="nativePlace != null" >
        native_place,
      </if>
      <if test="certificateNumber != null" >
        certificate_number,
      </if>
      <if test="image != null" >
        image,
      </if>
      <if test="major != null" >
        major,
      </if>
      <if test="graduateSchool != null" >
        graduate_school,
      </if>
      <if test="teachingResearch != null" >
        teaching_research,
      </if>
      <if test="job != null" >
        job,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tId != null" >
        #{tId,jdbcType=INTEGER},
      </if>
      <if test="tName != null" >
        #{tName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="authorlever != null" >
        #{authorlever,jdbcType=INTEGER},
      </if>
      <if test="schoolYear != null" >
        #{schoolYear,jdbcType=INTEGER},
      </if>
      <if test="education != null" >
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="nativePlace != null" >
        #{nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="certificateNumber != null" >
        #{certificateNumber,jdbcType=VARCHAR},
      </if>
      <if test="image != null" >
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="graduateSchool != null" >
        #{graduateSchool,jdbcType=VARCHAR},
      </if>
      <if test="teachingResearch != null" >
        #{teachingResearch,jdbcType=VARCHAR},
      </if>
      <if test="job != null" >
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.bean.TeacherExample" resultType="java.lang.Integer" >
    select count(*) from teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update teacher
    <set >
      <if test="record.tId != null" >
        t_id = #{record.tId,jdbcType=INTEGER},
      </if>
      <if test="record.tName != null" >
        t_name = #{record.tName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.authorlever != null" >
        authorlever = #{record.authorlever,jdbcType=INTEGER},
      </if>
      <if test="record.schoolYear != null" >
        school_year = #{record.schoolYear,jdbcType=INTEGER},
      </if>
      <if test="record.education != null" >
        education = #{record.education,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.nativePlace != null" >
        native_place = #{record.nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="record.certificateNumber != null" >
        certificate_number = #{record.certificateNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.image != null" >
        image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.major != null" >
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.graduateSchool != null" >
        graduate_school = #{record.graduateSchool,jdbcType=VARCHAR},
      </if>
      <if test="record.teachingResearch != null" >
        teaching_research = #{record.teachingResearch,jdbcType=VARCHAR},
      </if>
      <if test="record.job != null" >
        job = #{record.job,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null" >
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update teacher
    set t_id = #{record.tId,jdbcType=INTEGER},
      t_name = #{record.tName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      authorlever = #{record.authorlever,jdbcType=INTEGER},
      school_year = #{record.schoolYear,jdbcType=INTEGER},
      education = #{record.education,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      native_place = #{record.nativePlace,jdbcType=VARCHAR},
      certificate_number = #{record.certificateNumber,jdbcType=VARCHAR},
      image = #{record.image,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      graduate_school = #{record.graduateSchool,jdbcType=VARCHAR},
      teaching_research = #{record.teachingResearch,jdbcType=VARCHAR},
      job = #{record.job,jdbcType=VARCHAR},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bean.Teacher" >
    update teacher
    <set >
      <if test="tName != null" >
        t_name = #{tName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="authorlever != null" >
        authorlever = #{authorlever,jdbcType=INTEGER},
      </if>
      <if test="schoolYear != null" >
        school_year = #{schoolYear,jdbcType=INTEGER},
      </if>
      <if test="education != null" >
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="nativePlace != null" >
        native_place = #{nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="certificateNumber != null" >
        certificate_number = #{certificateNumber,jdbcType=VARCHAR},
      </if>
      <if test="image != null" >
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="graduateSchool != null" >
        graduate_school = #{graduateSchool,jdbcType=VARCHAR},
      </if>
      <if test="teachingResearch != null" >
        teaching_research = #{teachingResearch,jdbcType=VARCHAR},
      </if>
      <if test="job != null" >
        job = #{job,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where t_id = #{tId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bean.Teacher" >
    update teacher
    set t_name = #{tName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      authorlever = #{authorlever,jdbcType=INTEGER},
      school_year = #{schoolYear,jdbcType=INTEGER},
      education = #{education,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      native_place = #{nativePlace,jdbcType=VARCHAR},
      certificate_number = #{certificateNumber,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      graduate_school = #{graduateSchool,jdbcType=VARCHAR},
      teaching_research = #{teachingResearch,jdbcType=VARCHAR},
      job = #{job,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where t_id = #{tId,jdbcType=INTEGER}
  </update>
</mapper>